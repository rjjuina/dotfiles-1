# -*- mode: snippet -*-
# name: tencnt_us_process_comment
# key: tupc
# expand-env: ((yas-indent-line 'fixed) (yas-wrap-around-region 'nil))
# --

# ******************************************************************************
#
#                                 ,(@@@@@@@&(.
#                           @&@@@@@@@@@@@@@@@@@@@@&&
#                       &&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%
#                    %@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/
#                  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&
#                *@@@@@@@@@@&     .&@@@@@@@(     @@@@@@@@@@@@&.
#               &@@@@@@@@@@&        &@@@@@        ,&@@@@@@@@@@@&
#              &@@@@@@@@@@@     &&&  @@@@  ,&&&    @@@@@@@@@@@@@&
#             &@@@@@@@@@@@@    &&  & @@@&  && &*   @@@@@@@@@@@@@@&
#             &@@@@@@@@@@@@.    @&& /@@@@&  &&/    &@@@@@@@@@@@@@@
#            &@@@@@@@@@@@@@@&      @@@@@@@@      (&@@@@@@@@@@@@@@&(
#            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&@@@@@@@@@@@@@@@@@@&
#            @@@@@@@@@@@@&#/////////////////////////(&@@@@@@@@@@@&@
#            ,@@&@@@@@///////////////////////////////////@@@@@@@@@
#            #%@@@@@&&/////@//////////////////////&//////@@@@@@@@%/
#           ,####&@&@@@@@@%///@@//////////////@@////#@@@@@@@@@@####.
#           /#######%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#######,
#            %############&@@@@@@@@@@@@@@@@@@@@@@&@@@&############%
#         @@@@&%################################################%@@@&
#       &&&@@@@@@%############################################%@@@@@@&&
#     .@&&@@@@@@&  ,*%####################################%*. %@@@@@@@&&(
#    &&&&&@@@@@@     ,%%%%%%######################%##*,.       %@@@@@@&&&&
#   &&&&&&@@@@@#    .%##########%%...,,,,,,,...                 @@@@@@&&&&&
#  &&&&&&&@@@@@     %############.                              @@@@@&&&&&&&
# *&&&&&&@ &@@@&   ,############,                               @@@&&@&&&&&&%
# &&&&&&/   @@@@   *###########%                               &@@@&  ,&&&&&@
# &&&@*      ,@&@.  ,%%########                               @&@&      .@&&&
#              #@@&    ..,/#%/                              ,@@@/
#                 @@&.                                    &@@@
#             #((((((@&@(                              @@@@((((((.
#          .%((((((((((((&@@&#                   .&&@@&(((((((((((#.
#          .((((((((((((((((((((#&&@@@&&@@@@@@&#(((((((((((((((((((*
#          .%(((((((((((((((((((((%.       .%(((((((((((((((((((((%.
#            ..(%((((((((((((#%...           ...##((((((((((((#(..
#
# 程序名称:    `(file-name-nondirectory (file-name-sans-extension (buffer-file-name)))`
# 功能描述:    $1
# 输入参数:
# 目标表名:    $2
# 数据源表1:   $3
# 数据源表2:   $4
# 创建人名:    $0
# 创建日期:    `(current-time-string)`
# 版本说明:    v1.0
# 公司名称:    tencent
# 修改人名:
# 修改日期:
# 修改原因:
# ******************************************************************************

import datetime

op_table = "$2"


def init_partition(tdw, date, channel, db="teg_sett"):
    SQL_DB = """USE %s""" % db
    SQL_PT_SHOW = """SHOW PARTITIONS %s""" % op_table

    SQL_PT_ADD = """ALTER TABLE %s ADD PARTITION p_%s VALUES IN ( '%s' )""" % (
        op_table,
        channel,
        channel,
    )
    SQL_SPT_ADD = """ALTER TABLE %s ADD SUBPARTITION sp_%s VALUES IN ( '%s' )""" % (
        op_table,
        date,
        date,
    )
    SQL_DATA_TC = """ALTER TABLE %s TRUNCATE PARTITION (p_%s, sp_%s)""" % (
        op_table,
        channel,
        date,
    )

    # SQL_PT_ADD  = '''ALTER TABLE %s ADD PARTITION p_%s VALUES IN ( '%s' )''' % (op_table, date, date)
    # SQL_DATA_TC = '''ALTER TABLE %s DROP PARTITION (p_%s)''' % (op_table, date)

    tdw.execute(SQL_DB)
    pts = tdw.execute(SQL_PT_SHOW)
    if "p_" + channel in pts and "sp_" + date in pts:
        print(SQL_DATA_TC)
        tdw.execute(SQL_DATA_TC)
    else:
        if "p_" + channel not in pts:
            print(SQL_PT_ADD)
            tdw.execute(SQL_PT_ADD)
        if "sp_" + date not in pts:
            print(SQL_SPT_ADD)
            tdw.execute(SQL_SPT_ADD)

def process(tdw, date, channel, db="teg_sett"):
    _SQL = ""
    _SQL = " ".join(each for each in _SQL.replace("\n", " ").split(" ") if each)
    print(_SQL)
    tdw.execute(_SQL)

def TDW_PL(tdw, argv=[]):
    # argv = ['20160502']
    print("Usage ./demo [1]date(YYYYMMDD)")
    if 1 > len(argv):
        print("[fail] params is missing, please recheck")
        return -1
    try:
        datetime.datetime.strptime(argv[0], "%Y%m%d")
    except Exception:
        print("[fail] datetime format error, please recheck")
        return -1
    init_partition(tdw, argv[0], argv[1]) if len(argv) == 2 else init_partition(
        tdw, argv[0], argv[1], argv[2]
    )
    process(tdw, argv[0], argv[1]) if len(
        argv
    ) == 2 else process(tdw, argv[0], argv[1], argv[2])
