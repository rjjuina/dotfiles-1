ensime {
  imports {
    locals = false
    # corresponds to scala-refactoring's OrganizeImportsConfig
    strategy = "collapse" # collapse | expand | preserveWildcards
    groups = ["java", "scala"]
    wildcards = []
    maxIndividualImports = 10
    collapseExclude = []
  }

  explode.on.disconnect = false
  exit = true
  protocol = "swank"
  exitAfterIndex = false
  disableClassMonitoring = false
  index.batchSize = 10
  legacy {
    connectionInfoReq = true
    jarurls = true
  }
}

akka {
  log-config-on-start = off
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # logging here is set to debug (otherwise akka will not report the lifecycle events at all)
  # tune the logback configuration to control the logging
  loglevel = "DEBUG"
  stdout-loglevel = "OFF"
  jvm-exit-on-fatal-error = off
  
  actor {
    debug {
      receive = on
      #autoreceive = on
      #lifecycle = on
      #fsm = on
      #event-stream = on
      unhandled = on
    }

  }

  search-service-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      core-pool-size-min = 1
      # hacky limit to indexing (very small threadpool)
      core-pool-size-factor = 0.5
      core-pool-size-max = 2
      task-queue-size = -1
    }
  }
  
  http {
    server {
      idle-timeout = infinite
    }
  }

}
